import streamlit as st
import random
import json

st.header('Interactive image captioning annotation')
st.subheader('Instructions')
st.markdown('Given the following images and a caption generated by an AI model, generate a "reformulation" of the caption by writing a similar caption in which the errors from the original caption (if such exists), are fixed. If the model generated caption is too bad to fix, write a new caption.')

st.subheader('Examples')
st.image('http://images.cocodataset.org/train2017/000000000025.jpg', width=350)
st.markdown('**Model generated caption:** An elephant eating from a tree top')
st.markdown('**Reformulation:** A giraffe eating from a tree top')
st.markdown('------------------')
st.image('http://images.cocodataset.org/train2017/000000010948.jpg', width=350)
st.markdown('**Model generated caption:** A boy playing a card game')
st.markdown('**Reformulation:** A man and a woman playing a video game')
st.markdown('------------------')
st.image('http://images.cocodataset.org/train2017/000000010728.jpg', width=350)
st.markdown('**Model generated caption:** A tennis player hitting the ball with a racket **[Caption too bad to fix]**')
st.markdown('**Reformulation:** A pizza sitting on a plate on a wooden table')

st.subheader('Annotation')

with open('data_example.json', 'r') as fp:
    data = json.load(fp)

res = {}
reformulation = ''
while reformulation is not None and len(res) < len(data):
    reformulation = None
    sample = random.sample(data, 1)[0]
    url_prefix = 'http://images.cocodataset.org/'
    url_prefix += sample['split'] + '2017/'
    image_url = url_prefix + str(sample['image_id']).zfill(12) + '.jpg'
    st.image(image_url, width=350)
    st.markdown('**Model generated caption:** ' + sample['caption'])
    reformulation = st.text_input(label='**Reformulation:**')

    if reformulation != None:
        new_image_id = sample['image_id']
        if sample['split'] == 'train':
            new_image_id = 1000000 + new_image_id
        else:
            new_image_id = 2000000 + new_image_id
        if new_image_id not in res:
            res[new_image_id] = []
        res[new_image_id].append(reformulation)
        reformulation = None
